/* ABHISHEK KUMAR */
#include<bits/stdc++.h>
using namespace std; 

/* Definitions Starts */

#define int long long
#define maxpq priority_queue
#define minpq priority_queue<int,vector<int>,greater<int>>
#define endl "\n"
#define acc(temp) accumulate(temp.begin(),temp.end(),0)
#define pb push_back()
#define vi vector<int>
#define vii vector<vector<int>>
const int mod=1e9+7;
#define py { cout<<"yes"<<endl; return ;}
#define pn { cout<<"no"<<endl; return;}
#define fora(i,n) for(int i=0;i<n;i++)
vector<int>dx={0,0,-1,+1,-1,-1,+1,+1}; 
vector<int>dy={-1,+1,0,0,-1,+1,-1,+1}; 
#define pomin tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>
// Policy based ds in insert and order of key in o(logn) 
/* Definitions Ends Here */

/* Code Snippets Starts */

int power(int a,int b)
{   if(b==0) return 1;  int f=power(a,b/2);   if(b&1)  return a*f*f%mod;   return f*f%mod;  } 

bool isprime(int n)
{  if(n<2) return false;  for(int i=2;i<=sqrt(n);i++) if(n%i==0) return false;  return true;  }

bool ispalindrome(int n)
{  int ans=0;  while(n>0) {   ans=ans*10+n%10;n= n/10;   }   return n==ans;  }

vector<int>primefact(int n)
{
    vector<int>res;  
    int temp=ceil(sqrt(n)); int i;
    for(i=2;i<=temp;i++)
    {
        while(n%i==0)
        { res.push_back(i);  n/=i; }
        if(n==1) break;        
    }
    if(n>1) res.push_back(n);
    return res;
}
vector<int>seive(int n)
{  vector<int>prime(n+1,1); 
    for(int i=2;i<=sqrt(n);i++)
    {  if(isprime(i))
       {   for(int j=i*i;j<=n;j=j+i)  { prime[j]=0; } 
       } 
    }  return prime; 
 }

/* Code Snippets Ends Here*/

/* Code appears here */

void solve()
{
      
}

/* Code ends here */

signed main()
{
    int t; cin>>t; 
    while(t--)
     solve(); 
}





